% macro match dba test lattice beta functions and dispersion using
% quadrupoles.
%
% this macro shows the available functionalities of atmatch. 
% 
% various variable and constraint input constructions are shown

clear all
%load('mTME19_match.mat','RING');
%%%% load('numax_7BA_19c_1_1.mat','RING')
%load('numax_7BA_M1.mat','RING','RING1')
%load('numax_7BA_M2.mat','RING','RING2')
%load('numax_7BA_M5.mat','RING','RING5');

%RING=RING5; 
%load('numax_7BA_19c_2_1_M1.mat','RING','RING1');RING=RING1;
%load('numax_7BA_19c_2_1_M2.mat','RING','RING2');RING=RING2;
%load('numax_7BA_19c_2_1_M3.mat','RING','RING3');RING=RING3;
%load('numax_7BA_19c_2_1_M4.mat','RING','RING4');RING=RING4;
%load('numax_7BA_19c_2_1_M5.mat','RING','RING5');RING=RING5; %42.6pm
%load('numax_7BA_19c_2_1_M6.mat','RING','RING6');RING=RING6; %43pm

% load('numax_7BA_19c_2_1_M0.mat','RING','RING1');RING=RING1; % trying to curb chromaticity < 100 // etax = 4.04mm
% % % load('numax_7BA_19c_2_1_M1.mat','RING','RING1');RING=RING1;  % Xi = -94/-94  //  etax = 3.92mm
% % % load('numax_7BA_19c_2_1_M2.mat','RING','RING1');RING=RING1;  % Xi = -94/-95  //  etax = 3.71mm
% % % load('numax_7BA_19c_2_1_M3.mat','RING','RING1');RING=RING1;  % Xi = -94/-97  //  etax = 3.42mm 
% % % load('numax_7BA_19c_2_1_M4.mat','RING','RING1');RING=RING1;  % Xi = -95/-94  //  etax = 2.97mm 
% % % load('numax_7BA_19c_2_1_M5.mat','RING','RING1');RING=RING1;  % Xi = -95/-97  //  etax = 2.10mm
% % % load('numax_7BA_19c_2_1_M6.mat','RING','RING1');RING=RING1; 
% % % load('numax_7BA_19c_2_1_M7.mat','RING','RING1');RING=RING1; 
%load('numax_7BA_19c_2_1_M8.mat','RING','RING1');RING=RING1; 
%load('numax_7BA_19c_2_1_M9.mat','RING','RING1');RING=RING1;  % Xi = -102 /-86  //  etax = 0.0mm // ex = 38.5pm // nu = 64.10/26.34
%load('numax_7BA_19c_2_1_M10.mat','RING','RING1');RING=RING1;  % Xi = -98 /-85  //  etax = 0.0mm // ex = 39.5pm // nu = 64.10/26.34
%load('numax_7BA_19c_2_1_M11.mat','RING','RING1');RING=RING1;  % Xi = -98 /-85  //  etax = 0.0mm // ex = 39.5pm // nu = 64.10/26.34
%load('numax_7BA_19c_2_1_M12.mat','RING','RING1');RING=RING1;  % Xi = -102 /-79  //  etax = 0.0mm // ex = 38.5pm // nu = 64.10/24.34
%load('numax_7BA_19c_2_1_M13.mat','RING','RING1');RING=RING1;  % Xi = -98.5 /-82.2  //  etax = 0.0mm // ex = 40pm // nu = 64.10/24.34 // betaxy=3.5m

% shorter dstra
%load('numax_7BA_20_1_1_M1.mat','RING','RING1');RING=RING1;  %  Xi = -100.5 /-83.5  //  etax = 0.0mm // ex = 71pm // nu = 63.50/26.13 // betaxy=3.2m
%load('numax_7BA_20_1_1_M2.mat','RING','RING1');RING=RING1;  %  Xi = -100.5 /-83.5  //  etax = 0.0mm // ex = 66pm // nu = 63.50/26.13 // betaxy=3.2m 
%load('numax_7BA_20_1_1_M3.mat','RING','RING1');RING=RING1;   %  Xi = -100.5 /-83.5  //  etax = 0.0mm // ex = 56pm // nu = 63.50/26.13 // betaxy=3.2m 
%load('numax_7BA_20_1_1_M4.mat','RING','RING1');RING=RING1;   %  Xi = -104.3 /-83.9  //  etax = 0.0mm // ex = 39pm // nu = 64.11/25.86 // betaxy=3.7m
%load('numax_7BA_20_1_1_M5.mat','RING','RING1');RING=RING1;  %  Xi = -104.3
%/-83.9  //  etax = 0.0mm // ex = 39pm // nu = 64.11/25.86 //
%betaxy=3.7m/2.8
%load('numax_7BA_21_1_1_M1.mat','RING','RING1');RING=RING1;  %  
%load('numax_7BA_22_1_1_M1.mat','RING','RING1');RING=RING1;  %  
%load('numax_7BA_23_1_1_M1.mat','RING','RING1');RING=RING1;  %  Xi = -108.9 /-85.6  //  etax = 0.0mm // ex = 40pm // nu = 65.32/27.65 // betaxy=3.8m/2.8m
%load('numax_7BA_23_1_1_M2.mat','RING','RING1');RING=RING1;
%load('numax_7BA_24_1_1_M1.mat','RING','RING1');RING=RING1;
%load('numax_7BA_24_2_1_M1.mat','RING','RING1');RING=RING1;  %  Xi = -119.2 /-72.2  //  etax = 0.0mm // ex = 38pm // nu = 64.45/26.34 // betaxy=9.9m/3.4m
%load('numax_7BA_24_2_1_M2.mat','RING','RING1');RING=RING1;  % 
%load('numax_7BA_24_2_1_M3.mat','RING','RING1');RING=RING1;  % Xi = -120.2 /-71.6  //  etax = 0.0mm // ex = 33pm // nu = 64.20/26.34 // betaxy=10m/3.04m
%load('numax_7BA_24_2_1_M4.mat','RING','RING1');RING=RING1;  % Xi = -113.5 /-78.7  //  etax = 0.0mm // ex = 33.2pm // nu = 64.20/26.34 // betaxy=9.56m/3.04m
%load('numax_7BA_24_2_1_M5.mat','RING','RING1');RING=RING1;  % Xi = -113.4 /-74.6  //  etax = 0.0mm // ex = 33.3pm // nu = 64.20/26.34 // betaxy=9.2m/3.1m
%load('numax_7BA_24_2_1_M6.mat','RING','RING1');RING=RING1;  % Xi = -112.1 /-77.9  //  etax = 0.0mm // ex = 33.5pm // nu = 64.21/26.34 // betaxy=8.8m/3.1m
%load('numax_7BA_24_2_1_M7.mat','RING','RING1');RING=RING1;  % Xi = -111.8 /-79.3  //  etax = 0.0mm // ex = 33.5pm // nu = 64.21/26.34 // betaxy=8.8m/3.01m

% etax - asymmetric     DA from moga_DA(RING1,15,40,500,10e-3,3e-3,0.0)
% % % load('numax_7BA_25_2_1_M1.mat','RING','RING1');RING=RING1;  % Xi = 0.964/0.933  //  etax = 0.0mm // ex = 33.511pm // nu = 64.21/26.34 // betaxy=8.8m/3.01m // DA = 4.754e-2
% etax symmetric
load('numax_7BA_25_2_2_M1.mat','RING','RING1');RING=RING1; % Xi = 0.99995/0.99998  //  etax = 0.0mm // ex = 33.00pm // nu = 64.20/26.340 // betaxy=10.13m/3.14m // DA = 5.0294e-2
% seems identical to 25_2_2, but DA slighlthy better 
% % % load('numax_7BA_25_2_3_M1.mat','RING','RING1');RING=RING1; % Xi = 0.99995/0.99998  //  etax = 0.0mm // ex = 33.00pm // nu = 64.20/26.340 // betaxy=10.13m/3.14m // DA = 5.39199e-2

% % % load('numax_7BA_25_2_4_M1.mat','RING','RING1');RING=RING1; % Xi = 1.00005/1.00001  // etax = 0.0mm // ex = 33.00pm // nu = 64.20/26.340  // betaxy=10.13m/3.14m // DA = 5.51701e-2

%load('numax_7BA_26_2_1_M1.mat','RING','RING1');RING=RING1;  % Xi = -111.8 /-79.3  //  etax = 0.0mm // ex = 33.5pm // nu = 64.21/26.34 // betaxy=8.8m/3.01m
%  % 

addpath(fullfile(pwd,'..'))

%%  VARIABLES

kABmstart=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','ABm'),1,2);
VABmK = struct('Indx',{findcells(RING,'FamName','ABm'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'ABm')},...
            'Parameter',{{'PolynomB',{1,2}},kABmstart(1)},...
            'LowLim',{[]},...
            'HighLim',{[]}...
            );
kTGBmstart=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','TGBm'),1,2);
VTGBmK = struct('Indx',{findcells(RING,'FamName','TGBm'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'TGBm')},...
            'Parameter',{{'PolynomB',{1,2}},kTGBmstart(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

kQM0start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM0'),1,2);
VQM0K = struct('Indx',{findcells(RING,'FamName','QM0'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM0')},...
            'Parameter',{{'PolynomB',{1,2}},kQM0start(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

kQM1start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM1'),1,2);
VQM1K = struct('Indx',{findcells(RING,'FamName','QM1'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM1')},...
            'Parameter',{{'PolynomB',{1,2}},kQM1start(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );
if 1 == 1
kQM1astart=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM1a'),1,2);
VQM1aK = struct('Indx',{findcells(RING,'FamName','QM1a'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM1a')},...
            'Parameter',{{'PolynomB',{1,2}},kQM1astart(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );
end
kQM2start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM2'),1,2);
VQM2K = struct('Indx',{findcells(RING,'FamName','QM2'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM2')},...
            'Parameter',{{'PolynomB',{1,2}},kQM2start(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

kQM3start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM3'),1,2);
VQM3K = struct('Indx',{findcells(RING,'FamName','QM3'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM3')},...
            'Parameter',{{'PolynomB',{1,2}},kQM3start(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

kQM4start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QM4'),1,2);
kQM4start=7*ones(size(kQM4start));
VQM4K = struct('Indx',{findcells(RING,'FamName','QM4'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'QM4')},...
            'Parameter',{{'PolynomB',{1,2}},kQM4start(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

kABstart=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','AB'),1,2);
VABK = struct('Indx',{findcells(RING,'FamName','AB'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'AB')},...
            'Parameter',{{'PolynomB',{1,2}},kABstart(1)},...
            'LowLim',{[]},...
            'HighLim',{[]}...
            );
kTGBstart=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','TGB'),1,2);
VTGBK = struct('Indx',{findcells(RING,'FamName','TGB'), ...
                    @(RING,K1Val)VaryQuadFam(RING,K1Val,'TGB')},...
            'Parameter',{{'PolynomB',{1,2}},kTGBstart(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

indAB  = findcells(RING,'FamName','AB');
indTGB = findcells(RING,'FamName','TGB'); 
ABstart=getcellstruct(RING,'BendingAngle',findcells(RING,'FamName','AB'),1,1);
TGBstart=getcellstruct(RING,'BendingAngle',findcells(RING,'FamName','TGB'),1,1);
SumABTGB = ABstart+TGBstart;

%V9=atVariableBuilder(RING,{@(RING,ABVal)VaryMagAngleMA(RING,ABVal,indAB,indTGB)},{0});
VABangle = struct('Indx',{findcells(RING,'FamName','AB'), ...
                    @(RING,ABVal)VaryMagAngleMA(RING,ABVal,'AB', 'TGB', SumABTGB)}, ... %indTGB)},...
            'Parameter',{{'BendingAngle',{1,1}},ABstart(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );

indABm  = findcells(RING,'FamName','ABm');
indTGBm = findcells(RING,'FamName','TGBm'); 
ABmstart=getcellstruct(RING,'BendingAngle',findcells(RING,'FamName','ABm'),1,1);
TGBmstart=getcellstruct(RING,'BendingAngle',findcells(RING,'FamName','TGBm'),1,1);
SumABmTGBm = ABmstart+TGBmstart;

%V9=atVariableBuilder(RING,{@(RING,ABVal)VaryMagAngleMA(RING,ABVal,indAB,indTGB)},{0});
VABmangle = struct('Indx',{findcells(RING,'FamName','ABm'), ...
                    @(RING,ABmVal)VaryMagAngleMA(RING,ABmVal,'ABm', 'TGBm', SumABmTGBm)}, ... %indTGB)},...
            'Parameter',{{'BendingAngle',{1,1}},ABmstart(1)},...
            'LowLim',{[],[]},...
            'HighLim',{[],[]}...
            );
% V9 = struct('Indx',{findcells(RING,'FamName','AB'),...
%      @(RING,ABtheta)VaryMagAngleMA(RING,ABtheta,'AB')},...
%             'Parameter',{'BendingAngle',{1,1}},...
%             'LowLim',{[],[]},...
%             'HighLim',{[],[]}...
%             );
% @(RING,ABtheta)VaryMagAngleMA(RING,ABtheta,'AB','TGB')},...


% DM1AHstart = getcellstruct(RING,'Length',findcells(RING,'FamName','dm1ah'),1,1);
% % % indDM1AH = findcells(RING,'FamName','dm1ah');
% % % indDSTRA = findcells(RING,'FamName','dstra'); 
% % % DM1AHstart=getcellstruct(RING,'Length',findcells(RING,'FamName','dm1ah'),1,1);
% % % DSTRAstart=getcellstruct(RING,'Length',findcells(RING,'FamName','dstra'),1,1);
% % % SumD = DSTRAstart(1)+DM1AHstart(1)+DM1AHstart(2);
% % % 
% % % V10 = struct('Indx',{findcells(RING,'FamName','dm1ah'), ...
% % %                     @(RING,DLen)VaryDriftLengthMA(RING,DLen,'dm1ah','dstra',SumD)},...
% % %             'Parameter',{{'Length',{1,1}},DM1AHstart(1)},...
% % %             'LowLim',{[0],[]},...
% % %             'HighLim',{[1],[]}...
% % %             );

%Variab1=atVariableBuilder(RING,{'QM1','QM2'},{{'PolynomB',{1,2}},{'PolynomB',{1,2}}});
%k1start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QDM'),1,2);

%Variab2=atVariableBuilder(RING,{'QM3'},{{'PolynomB',{1,2}}});
%k1start=getcellstruct(RING,'PolynomB',findcells(RING,'FamName','QDM'),1,2);

%Variab3=atVariableBuilder(RING,{'ABm'},{{'PolynomB',{1,2}}});

%Variab4=atVariableBuilder(RING,{'TGBm'},{{'PolynomB',{1,2}}});

% Variab5=atVariableBuilder(RING,{'AB'},{{'PolynomB',{1,2}}});
% 
% Variab6=atVariableBuilder(RING,{'TGB'},{{'PolynomB',{1,2}}});
% 


% Variab2=struct('Indx',{findcells(RING,'FamName','QFM'),@(RING,K1Val)VaryQuadFam(RING,K1Val,'QDM')},...
%     'LowLim',{[],[]},...
%     'HighLim',{[],[]},...
%     'Parameter',{{'PolynomB',{1,2}},k1start(1)}...
%     );

%Variab=[Variab1,Variab2, Variab3, Variab4, Variab5, Variab6];
%Variab=[V1, V2, V3, V3a, V4, V5, V6, V7, V8];
%Variab=[V1, V2, V3, V3a,  V4, V5, V6, V7, V8];
onlymatch=1;
REF=1;
if onlymatch ==1
    VarK   = [VABmK, VTGBmK, VQM0K, VQM1K, VQM1aK, VQM2K, VQM3K, VQM4K];
    VarAng = [VABmangle];
else
    VarK   = [VABmK, VTGBmK, VQM0K, VQM1K, VQM1aK, VQM2K, VQM3K, VQM4K, VABK, VTGBK];
    VarAng = [VABmangle, VABangle ];
end
full=1;
Variab = [VarK]; % fit only the gradients
if full==1
Variab = [VarK, VarAng] ; % fit gradients and angles
end

%Variab = [Variab, VQM0K, VQM1K, VQM1aK, VQM2K, VQM3K, VQM4K, VABK, VTGBK];

%%  CONSTRAINTS
lgbhindx = findcells(RING,'FamName','LGBh');
s1hindx  = findcells(RING,'FamName','S1h');
qm3indx  = findcells(RING,'FamName','QM3');

% original
% C11=struct('Fun',@(RING,~,~)betx(RING,s1hindx(4)),...
%     'Min',4.55006,...
%     'Max',4.55006,...
%     'RefPoints',[],...
%     'Weight',1);

B110=struct('Fun',@(RING,~,~)betx(RING,s1hindx(4)),...
    'Min',4,...
    'Max',4,...
    'RefPoints',[1],...
    'Weight',1);
B210=struct('Fun',@(RING,~,~)bety(RING,s1hindx(4)),...
    'Min',1.1,...
    'Max',1.1,...
    'RefPoints',[1],...
    'Weight',1);

Ds1h4=struct('Fun',@(RING,~,~)dispx2(RING,s1hindx(4)),...
    'Min',0.045,...%0.033
    'Max',0.045,...%0.043
    'RefPoints',[1],...
    'Weight',1e-3);
DP110=struct('Fun',@(RING,~,~)dispxp2(RING,s1hindx(4)),...
    'Min',0,...
    'Max',0,...
    'RefPoints',[1],...
    'Weight',1);

B111=struct('Fun',@(RING,~,~)betx(RING,s1hindx(6)),...
    'Min',4,...
    'Max',4,...
    'RefPoints',[1],...
    'Weight',1);
Ds1h6=struct('Fun',@(RING,~,~)dispx2(RING,s1hindx(6)),...
    'Min',0.033,...%0.033
    'Max',0.033,...%0.043
    'RefPoints',[1],...
    'Weight',1e-3);
DP111=struct('Fun',@(RING,~,~)dispxp2(RING,s1hindx(6)),...
    'Min',0,...
    'Max',0,...
    'RefPoints',[1],...
    'Weight',1);

B112=struct('Fun',@(RING,~,~)betx(RING,s1hindx(8)),...
    'Min',4,...
    'Max',4,...
    'RefPoints',[1],...
    'Weight',1);
D112=struct('Fun',@(RING,~,~)dispx2(RING,s1hindx(8)),...
    'Min',0.033,...
    'Max',0.043,...
    'RefPoints',[1],...
    'Weight',1);
DP112=struct('Fun',@(RING,~,~)dispxp2(RING,s1hindx(8)),...
    'Min',0,...
    'Max',0,...
    'RefPoints',[1],...
    'Weight',1);
A12=struct('Fun',@(RING,~,~)alfx(RING,s1hindx(4)),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',0.1);

DB110=struct('Fun',@(RING,~,~)abs(bety(RING,lgbhindx(7)) - bety(RING,lgbhindx(5))),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',1e1);

D200=struct('Fun',@(RING,~,~)dispx2(RING,lgbhindx(1)),...
    'Min',0.0030,...
    'Max',0.010,...
    'RefPoints',[1],...
    'Weight',0.001);
DD200=struct('Fun',@(RING,~,~)abs(dispx2(RING,lgbhindx(5))-dispx2(RING,lgbhindx(3))),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',3e-3);

DP200=struct('Fun',@(RING,~,~)dispxp2(RING,lgbhindx([1])),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[],...
    'Weight',5e-6);
D201=struct('Fun',@(RING,~,~)dispx2(RING,lgbhindx([3])),...
    'Min',0.0030,...
    'Max',0.010,...
    'RefPoints',[],...
    'Weight',0.001);
DP201=struct('Fun',@(RING,~,~)dispxp2(RING,lgbhindx([3])),...
    'Min',0.0674,...
    'Max',0.08,...
    'RefPoints',[],...
    'Weight',1);
DD201=struct('Fun',@(RING,~,~)abs(dispx2(RING,lgbhindx(7))-dispx2(RING,lgbhindx(5))),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',1e-4);
DD202=struct('Fun',@(RING,~,~)abs(dispx2(RING,s1hindx(6))-dispx2(RING,s1hindx(4))),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',1e-4);
DD203=struct('Fun',@(RING,~,~)abs(dispx2(RING,s1hindx(8))-dispx2(RING,s1hindx(6))),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[1],...
    'Weight',1e-4);

% original
% C21=struct('Fun',@(RING,~,~)bety(RING,s1hindx(4)),...
%     'Min',1.64032,...
%     'Max',1.64032,...
%     'RefPoints',[],...
%     'Weight',1);
B21=struct('Fun',@(RING,~,~)bety(RING,s1hindx(4)),...
    'Min',1.1,...
    'Max',1.1,...
    'RefPoints',[],...
    'Weight',1);
A21=struct('Fun',@(RING,~,~)alfy(RING,s1hindx(4)),...
    'Min',0.0,...
    'Max',0.0,...
    'RefPoints',[],...
    'Weight',1e-3);
MB22=struct('Fun',@(RING,~,~)max(bety(RING,52:114)),...
    'Min',0,...
    'Max',5,...
    'RefPoints',[],...
    'Weight',1);
MD22=struct('Fun',@(RING,~,~)max(dispx2(RING,1:166)),...
    'Min',0.034,...
    'Max',0.034,...
    'RefPoints',[],...
    'Weight',1e-3);
mD22=struct('Fun',@(RING,~,~)min(dispx2(RING,52:114)),...
    'Min',0.0025,...
    'Max',0.0045,...
    'RefPoints',[],...
    'Weight',1e-3);

 D30=struct('Fun',@(RING,~,~)dispx2(RING,1),...
     'Min',0.000,...
     'Max',0.000,...
     'RefPoints',[1],...
     'Weight',1e-5);

 D40=struct('Fun',@(RING,~,~)dispx2(RING,166),...
     'Min',1e-7,...
     'Max',1e-7,...
     'RefPoints',[1],...
     'Weight',1);
 
 % C30=struct('Fun',@(RING,~,~)dispx(RING,1),...
 %     'Min',1e-2,...
 %     'Max',1e-2,...
 %     'RefPoints',[1],...
 %     'Weight',1); 
B31=struct('Fun',@(RING,~,~)betx(RING,1),...
    'Min',1.5,...  %1.5
    'Max',14.5,...  %1.5
    'RefPoints',[1],...
    'Weight',0.1);
B32=struct('Fun',@(RING,~,~)bety(RING,1),...
    'Min',1.5,... %5
    'Max',4.5,... %5
    'RefPoints',[1],...
    'Weight',1);
Bxy30 =struct('Fun',@(RING,~,~)abs(betx(RING,1)-bety(RING,1)),...
    'Min',0.0,... %5
    'Max',0.0,... %5
    'RefPoints',[1],...
    'Weight',2);

C41=struct('Fun',@(RING,~,~)betx(RING,lgbhindx(9)),...
    'Min',.48579,...
    'Max',.48579,...
    'RefPoints',[1],...
    'Weight',1);
C42=struct('Fun',@(RING,~,~)bety(RING,lgbhindx(9)),...
    'Min',4.8018,...
    'Max',4.8018,...
    'RefPoints',[1],...
    'Weight',1);
C51=struct('Fun',@(RING,~,~)betx(RING,lgbhindx(7)),...
    'Min',.48579,...
    'Max',.48579,...
    'RefPoints',[],...
    'Weight',1);
C52=struct('Fun',@(RING,~,~)bety(RING,lgbhindx(7)),...
    'Min',4.8018,...
    'Max',4.8018,...
    'RefPoints',[1],...
    'Weight',1);
C61=struct('Fun',@(RING,~,~)betx(RING,lgbhindx(5)),...
    'Min',.48579,...
    'Max',.48579,...
    'RefPoints',[1],...
    'Weight',1);
C62=struct('Fun',@(RING,~,~)bety(RING,lgbhindx(5)),...
    'Min',4.8018,...
    'Max',4.8018,...
    'RefPoints',[1],...
    'Weight',1);
EMIX=struct('Fun',@(RING,~,~)emix(RING),...
    'Min',32.5e-12,...
    'Max',32.50e-12,...
    'RefPoints',[],...
    'Weight',1e-13);
NUX=struct('Fun',@(RING,~,~)nux(RING,20),...
    'Min',64.2,... %64.2
    'Max',64.2,...
    'RefPoints',[],...
    'Weight',0.01*1);
NUY=struct('Fun',@(RING,~,~)nuy(RING,20),...
    'Min',26.34,... %26.34
    'Max',26.34,...
    'RefPoints',[],...
    'Weight',0.01*1);

DNUX_uc = struct('Fun',@(RING,~,~)DnuxUC(RING,20),...
    'Min',0.395,...
    'Max',0.395,...
    'RefPoints',[],...
    'Weight',0.01);

DNUY_uc = struct('Fun',@(RING,~,~)DnuyUC(RING,20),...
    'Min',0.14,...
    'Max',0.14,...
    'RefPoints',[],...
    'Weight',0.01);

XIX=struct('Fun',@(RING,~,~)xix(RING,20),...
    'Min',1,...
    'Max',1,...
    'RefPoints',[],...
    'Weight',1);
XIY=struct('Fun',@(RING,~,~)xiy(RING,20),...
    'Min',1,...
    'Max',1,...
    'RefPoints',[],...
    'Weight',1);


%Constr = [C11, C12, C21, C22];
% Constr = [ B110 B210 DB110 Ds1h4 DP110 B111 DP111 ...
%            B112 D112 DP112 A12 A21 D30 DP200 DD200 ...
%            DP201 DD201 DD202 MB22 Bxy30 ...
%            EMIX NUX NUY]; %  C41 C42 C51 C52 C61 C62];


% Constr = [ DB110 DP110 B111 DP111 ...
%            DP112 A12 A21 D30 DP200 DD200 ...
%            DP201 DD201 DD202 Bxy30]; %  C41 C42 C51 C52 C61 C62];

%%%%%% Constr = [ D30 EMIX NUX NUY Bxy30 B31] % DD202 DD203 ];%MB22 MD22 DD202 XIX XIY]; %  C41 C42 C51 C52 C61 C62];

Constr = [ D30 EMIX MB22 NUY NUX XIY XIX A12 A21 B31];%  DD202 DD203 ];%MB22 MD22 DD202 XIX XIY]; %  C41 C42 C51 C52 C61 C62];
Constr = [ D30 MB22 NUX NUY DD202 DD203 A12 A21 EMIX DNUY_uc ];%MB22 MD22 DD202 XIX XIY]; %  C41 C42 C51 C52 C61 C62];

if REF == 1
Constr = [ D30 MB22 NUX NUY DD202 DD203 A12 A21 EMIX ];%MB22 MD22 DD202 XIX XIY]; %  C41 C42 C51 C52 C61 C62];
end
%%%Constr = [ D30 mD22];%  DD202 DD203 ];%MB22 MD22 DD202 XIX XIY]; %  C41 C42 C51 C52 C61 C62];


%Constr = [C11]
%Constr = [C112 ]
if 1==0

Constr1=struct('Fun',@(RING,~,~)dispx(RING,1),...
    'Min',0e-3,...
    'Max',0e-3,...
    'RefPoints',[1],...
    'Weight',1);
disp('Horizontal dispersion at straigth section= 6e-3')

Constr2=struct('Fun',@(RING,~,~)betx(RING,lgbhindx(3)),...
    'Min',.48579,...
    'Max',.48579,...
    'RefPoints',[lgbhindx(3)],...
    'Weight',1);
disp('Horizontal beta at LGBh = 0.48')
Constr3=struct('Fun',@(RING,~,~)alfx(RING,lgbhindx(3)),...
    'Min',0,...
    'Max',0,...
    'RefPoints',[lgbhindx(3)],...
    'Weight',1);
disp('Horizontal alfa at LGBh = 0.00')

Constr4=struct('Fun',@(RING,~,~)bety(RING,lgbhindx(3)),...
    'Min',4.8018,...
    'Max',4.8018,...
    'RefPoints',[lgbhindx(3)],...
    'Weight',1);
disp('Vertical beta at LGBh = 4.8')
Constr5=struct('Fun',@(RING,~,~)alfy(RING,lgbhindx(3)),...
    'Min',0.00,...
    'Max',0.00,...
    'RefPoints',[lgbhindx(3)],...
    'Weight',1);
disp('Vertical alfa at LGBh = 0.00')

Constr6=struct('Fun',@(RING,~,~)dispx(RING,lgbhindx(3)),...
    'Min',0.00622479,...
    'Max',0.00622479,...
    'RefPoints',[lgbhindx(3)],...
    'Weight',1);
disp('Horizontal dispersion at LGBh = 0.00622479')

%qm1indx=findcells(RING,'FamName','QM1');


% Constr3=struct('Fun',{@(RING,~,~)bety(RING,qm1indx(1)),@(~,ld,~)mux(ld)},...
%     'Min',{4,2.5},...
%     'Max',{4,2.5},...
%     'RefPoints',{[],[1:length(RING)+1]},...
%     'Weight',{1,1});
% disp('Vertical beta at QM1= 4')
% disp('Horizontal phase advance = 2.8')

%Constr=[Constr1,Constr2,Constr3,Constr4,Constr5,Constr6];

%% MATCHING
 disp('wait few iterations')

 RING_matched=atmatch(RING,Variab,Constr,10^-20,1000,3,@lsqnonlin);
end

%return
% c1=atlinconstraint(lgbhindx(3),...
%     {{'beta',{1}},{'beta',{2}}},...
%     [0.48579,4.8018],...
%     [0.48579,4.8018],...
%     [1 1]);
% 
% c2=atlinconstraint(lgbhindx(3),...
%     {{'alpha',{1}},{'alpha',{2}}},...
%     [0.0,0.0],...
%     [0.0,0.0],...
%     [1e3 1e3]);
% 
% c3=atlinconstraint(lgbhindx(3),...
%     {{'Dispersion',{1}}},...
%      0.00622479,...
%      0.00622479,...
%      1 );
% 
% c4=atlinconstraint(1,...
%     {{'Dispersion',{1}}},...
%      0 ,...
%      0 ,...
%      1e6 );
% 
% c=[c1,c2,c3,c4];

RING_matched_optconstr=atmatch(RING,Variab,Constr,10^-6,5000,3,@lsqnonlin,'verbose',3,'UseParallel',true);%
%RING_matched_optconstr=atmatch(RING,Variab,Constr,10^-5,1000,3,'verbose',3);%

figure;atplot(RING);% export_fig('ringdba.pdf','-transparent');
%figure;atplot(RING_matched);% export_fig('ringdba_matched.pdf','-transparent');
figure;atplot(RING_matched_optconstr);% export_fig('ringdba_matched.pdf','-transparent');