%
% Received from Johan 2024/07/31, auto export to AT from Tracy
% with minor tweaks - function npfloat, removed RF cavity

function ring = max_4u_sp_jb_7()
ring = {...
    atringparam('', 3000000000.0, 1, 'Particle', struct('name', 'relativistic', 'rest_energy', 0.0, 'charge', -1.0), 'beam_current', 0.0);...
        atdrift('d15', 2.389);...
       atmarker('gs');...
       atmarker('bpm');...
        atdrift('d14', 0.04300000000000001);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d13', 0.017999999999999988);...
    atmultipole('o1', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atdrift('d12', 0.025);...
   atquadrupole('q1', 0.25, npfloat(4.66536));...
        atdrift('d12', 0.025);...
    atmultipole('o2', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atdrift('d11', 0.1);...
   atquadrupole('q2', 0.25, npfloat(-4.29578));...
        atdrift('d10', 0.00608);...
        atsbend('d1_u6', 0.05, -0.003685437248511226, npfloat(0.00028), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00028) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u5', 0.05, -0.0009601056215220808, npfloat(0.00012), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00012) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u4', 0.05, 0.0020858429890584233, npfloat(0.00012), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00012) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u3', 0.05, 0.0024260076602721182, npfloat(0.00013), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00013) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u2', 0.05, 0.00187448361664191, npfloat(0.0), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u1', 0.05, 0.0018463838156848012, npfloat(-3e-05), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-3e-05) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_0', 0.20424, 0.008156447193345101, npfloat(-0.05692), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.05692) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d1', 0.05, 0.0016301375213627035, npfloat(-0.00024), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00024) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d2', 0.05, 0.0015430455916881868, npfloat(-0.00031), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00031) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d3', 0.05, 0.00150203035426632, npfloat(-0.00026), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00026) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d4', 0.05, 0.001722639971718403, npfloat(-0.00037), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00037) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d5', 0.05, 0.0016102407678899682, npfloat(-0.0004), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.0004) npfloat(0.0) npfloat(0.0)]);...
    atmultipole('o3', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atdrift('d9', 0.09268000000000004);...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d_corr', 0.05);...
        atdrift('d8', 0.024999999999999994);...
       atmarker('bpm');...
        atdrift('d7', 0.045);...
    atsextupole('s1', 0.1, npfloat(0.0), 'NumIntSteps', 3);...
       atmarker('ge');...
        atdrift('d6', 1.302);...
       atmarker('gs');...
   atquadrupole('q3', 0.15, npfloat(3.2133));...
        atdrift('d4', 0.0375);...
        atdrift('d5', 0.0375);...
    atsextupole('s2', 0.05, npfloat(0.0), 'NumIntSteps', 3);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
       atmarker('bpm');...
        atdrift('d4', 0.0375);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d3', 0.10000000000000003);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d2', 0.20310999999999998);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d1', 0.01);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d1', 0.01);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
       atmarker('ge');...
        atdrift('d2', 0.20310999999999998);...
       atmarker('gs');...
        atdrift('d_corr', 0.05);...
        atdrift('d_corr', 0.05);...
        atdrift('d3', 0.10000000000000003);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d4', 0.0375);...
        atdrift('d5', 0.0375);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
       atmarker('bpm');...
        atdrift('d4', 0.0375);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d3', 0.10000000000000003);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d2', 0.20310999999999998);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d1', 0.01);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d1', 0.01);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
       atmarker('ge');...
        atdrift('d2', 0.20310999999999998);...
       atmarker('gs');...
        atdrift('d_corr', 0.05);...
        atdrift('d_corr', 0.05);...
        atdrift('d3', 0.10000000000000003);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d4', 0.0375);...
        atdrift('d5', 0.0375);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
       atmarker('bpm');...
        atdrift('d4', 0.0375);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d3', 0.10000000000000003);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d2', 0.20310999999999998);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d1', 0.01);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d1', 0.01);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d2', 0.20310999999999998);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d3', 0.10000000000000003);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d4', 0.0375);...
       atmarker('bpm');...
        atdrift('d5', 0.0375);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
        atdrift('d4', 0.0375);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d3', 0.10000000000000003);...
        atdrift('d_corr', 0.05);...
        atdrift('d_corr', 0.05);...
       atmarker('ge');...
        atdrift('d2', 0.20310999999999998);...
       atmarker('gs');...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d1', 0.01);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d1', 0.01);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d2', 0.20310999999999998);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d3', 0.10000000000000003);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d4', 0.0375);...
       atmarker('bpm');...
        atdrift('d5', 0.0375);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
        atdrift('d4', 0.0375);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d3', 0.10000000000000003);...
        atdrift('d_corr', 0.05);...
        atdrift('d_corr', 0.05);...
       atmarker('ge');...
        atdrift('d2', 0.20310999999999998);...
       atmarker('gs');...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d1', 0.01);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_0', 0.36189, 0.017763612060947884, npfloat(-1.13293), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-1.13293) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_1', 0.05, 0.002712241657599188, npfloat(-0.82469), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.82469) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_2', 0.05, 0.002661103510515754, npfloat(-0.80724), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.80724) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_3', 0.05, 0.0025699973235616498, npfloat(-0.47805), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.47805) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_4', 0.05, 0.00243770136626048, npfloat(0.09652), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.09652) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d2_5', 0.05, 0.0023753931119642824, npfloat(0.10912), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.10912) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d1', 0.01);...
    atsextupole('s4', 0.1, npfloat(-288.7737), 'NumIntSteps', 3);...
        atdrift('d2', 0.20310999999999998);...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d3', 0.10000000000000003);...
        atsbend('r1', 0.15, -0.0030543261909900766, npfloat(5.4322), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(5.4322) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d4', 0.0375);...
       atmarker('bpm');...
        atdrift('d5', 0.0375);...
    atsextupole('s3', 0.05, npfloat(345.21213), 'NumIntSteps', 3);...
    atsextupole('s2', 0.05, npfloat(0.0), 'NumIntSteps', 3);...
        atdrift('d5', 0.0375);...
        atdrift('d4', 0.0375);...
   atquadrupole('q3', 0.15, npfloat(3.2133));...
       atmarker('ge');...
        atdrift('d6', 1.302);...
       atmarker('gs');...
    atsextupole('s1', 0.1, npfloat(0.0), 'NumIntSteps', 3);...
        atdrift('d7', 0.045);...
       atmarker('bpm');...
        atdrift('d8', 0.024999999999999994);...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d9', 0.09268000000000004);...
    atmultipole('o3', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atsbend('d1_d5', 0.05, 0.0016102407678899682, npfloat(-0.0004), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.0004) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d4', 0.05, 0.001722639971718403, npfloat(-0.00037), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00037) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d3', 0.05, 0.00150203035426632, npfloat(-0.00026), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00026) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d2', 0.05, 0.0015430455916881868, npfloat(-0.00031), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00031) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_d1', 0.05, 0.0016301375213627035, npfloat(-0.00024), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.00024) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_0', 0.20424, 0.008156447193345101, npfloat(-0.05692), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-0.05692) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u1', 0.05, 0.0018463838156848012, npfloat(-3e-05), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(-3e-05) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u2', 0.05, 0.00187448361664191, npfloat(0.0), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u3', 0.05, 0.0024260076602721182, npfloat(0.00013), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00013) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u4', 0.05, 0.0020858429890584233, npfloat(0.00012), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00012) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u5', 0.05, -0.0009601056215220808, npfloat(0.00012), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00012) npfloat(0.0) npfloat(0.0)]);...
        atsbend('d1_u6', 0.05, -0.003685437248511226, npfloat(0.00028), 'PolynomA', [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'PolynomB', [npfloat(0.0) npfloat(0.00028) npfloat(0.0) npfloat(0.0)]);...
        atdrift('d10', 0.00608);...
   atquadrupole('q2', 0.25, npfloat(-4.29578));...
        atdrift('d11', 0.1);...
    atmultipole('o2', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atdrift('d12', 0.025);...
   atquadrupole('q1', 0.25, npfloat(4.66536));...
        atdrift('d12', 0.025);...
    atmultipole('o1', 0.1, [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], [npfloat(0.0) npfloat(0.0) npfloat(0.0) npfloat(0.0)], 'NumIntSteps', 1);...
        atdrift('d13', 0.017999999999999988);...
    atcorrector('ch', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
    atcorrector('cv', 0.05, [npfloat(0.0) npfloat(0.0)], 'n', '1');...
        atdrift('d14', 0.04300000000000001);...
       atmarker('bpm');...
       atmarker('ge');...
        atdrift('d15', 2.389);...
%     atrfcavity('cav', 0.0, 3000000.0, 1998616386.666667, 176, 3000000000.0, 'Phi', 0.0, 'harnum', 176.0);...
};

end
function npfloat=npfloat(x)
npfloat=x;
end