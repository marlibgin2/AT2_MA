<<<<<<< HEAD
function plotLMAdist(varargin)
% plots distribution of LMSs 
=======
function phandles=plotLMAdist(varargin)
% plots distribution of Local Momentum APertures over a series of
% machines with errors
>>>>>>> MAXIV_addition
%% Inputs
% Mandatory argument
% LMAdist : structure generated by calcLMAdist
% 
<<<<<<< HEAD
% Optional flags
% plotorbrms: plots the rms of the uncorrected and corrected orbits for all
%             seeds
=======
% Optional arguments
% dpmaxplot : maximum of energy deviation axis, default =  LMA.deltalimit
% dpminplot : minimum of energy deviation axis, default = -LMA.deltalimit
% plottitle : title string
%
% Optional flags
% plotorbrms: plots the rms of the uncorrected and corrected orbits for all
%             seeds
%% Outputs
% phandles : cell array of handles to generated plots
%
>>>>>>> MAXIV_addition
%% Usage examples
% plotLMAdist(LMAdist);
% plotLMAdist(LMAdist,'plotorbrms');
% plotLMAdist(LMAdist,'plotorbrms','verbose',1);
%
% see also calcLMAdist

%% History
% PFT 2024/06/16
<<<<<<< HEAD

%% Input argument parsing
%
LMAdist      = getargs(varargin,[]);
plotorbrmsf  = any(strcmpi(varargin,'plotorbrms'));
=======
% PFT 2024/07/03 added vertical scale control
% PFT 2024/07/15 added optional plot title and output handles
% PFT 2024/07/23 added handling of empty LMAdist structure

%% Input argument parsing
%
LMAdist      = getargs(varargin,struct());
if(isempty(fields(LMAdist)))
   fprintf('%s Error in plotLMAdist. Empty LMAdist structure. \n', ...
                   datetime);
   phandles={};
   return
end
plotorbrmsf  = any(strcmpi(varargin,'plotorbrms'));
dpmaxplot    = getoption(varargin,'dpmaxplot', LMAdist.outputs.MAoptions.deltalimit);
dpminplot    = getoption(varargin,'dpminplot',-LMAdist.outputs.MAoptions.deltalimit);
plottitle    = getoption(varargin,'plottitle','');
>>>>>>> MAXIV_addition
verboselevel = getoption(varargin,'verbose',0);

%% Preamble
Spos      = LMAdist.outputs.Spos;
map_l_av  = LMAdist.outputs.map_l_av;
map_h_av  = LMAdist.outputs.map_h_av;
map_l_std = LMAdist.outputs.map_l_std;
map_h_std = LMAdist.outputs.map_h_std;

%% Plots LMA distribution

<<<<<<< HEAD
figure;errorbar(Spos, map_l_av*100,map_l_std*100,'-o');
hold;errorbar(Spos,map_h_av*100,map_h_std*100 ,'o-');
xlabel('S[m]');
ylabel('Local Momentum Aperture [%]');
grid on;
ylim([-15,15]);

if (plotorbrmsf)
   figure; 
   plot(LMAdist.outputs.orb0_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   hold;
   plot(LMAdist.outputs.orb0_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title('rms orbit before correction');

   figure; 
   plot(LMAdist.outputs.orb_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   hold;
   plot(LMAdist.outputs.orb_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title('rms orbit after correction');
=======
nhandles=0;
phandles={};

figure;errorbar(Spos, map_l_av*100,map_l_std*100,'-o');
hold on;errorbar(Spos,map_h_av*100,map_h_std*100 ,'o-');
xlabel('S[m]');
ylabel('Local Momentum Aperture [%]');
grid on;
ylim([dpminplot*100,dpmaxplot*100]);
title(strcat(plottitle, {' LMA with errors'}));
nhandles=nhandles+1;
phandles{nhandles}=gcf;

if (plotorbrmsf)
   nseeds=LMAdist.inputs.nseeds;
   figure; 
   plot(1:nseeds,LMAdist.outputs.orb0_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   xlim([1 nseeds]);
   hold on;
   grid;
   plot(1:nseeds,LMAdist.outputs.orb0_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title(strcat(plottitle,'rms orbit before correction'));
   nhandles=nhandles+1;
   phandles{nhandles}=gcf;

   figure; 
   plot(1:nseeds,LMAdist.outputs.orb_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   xlim([1 nseeds]);
   hold on;
   grid;
   plot(1:nseeds,LMAdist.outputs.orb_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title(strcat(plottitle,'rms orbit after correction'));
   nhandles=nhandles+1;
   phandles{nhandles}=gcf;
>>>>>>> MAXIV_addition
end



 


