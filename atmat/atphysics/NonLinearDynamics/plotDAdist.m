function plotDAdist(varargin)
% plots distribution of DAs 
%% Inputs
% Mandatory argument
% DAdist : structure generated by calcDAdist
% 
% Optional arguments
% xminplot : minimum horizontal limit for DA plot [m]
% xmaxplot : maximum horizontal limit for DA plot [m]
% ymaxplot : maximum vertical limits for DA plots are (0,ymaxplot) [m]
%            If not given, the two values above are taken from
%            DAdist.outputs.DAoptions
%
% dpminplot : minimum energy deviation for xdp and ydp plots
% dpmaxplot : maximum energy deviation for xdp and ydp plots
%
% If not given, the four values above are taken from
%       DAdist.outputs.DAoptions
% verbose : defines level of verbose output, default=0, i.e. no output
%
% Optional flags
% plotorbrms: plots the rms of the uncorrected and corrected orbits for all
%             seeds
%% Usage examples
% plotDAdist(DAdist);
% plotDAdist(DAdist_std,'xminplot', -0.012, 'xmaxplot', 0.005, 'ymaxplot', 0.004);
% plotDAdist(DAdist_std,'plotorbrms');
% plotDAdist(DAdist_std,'plotorbrms','verbose',1);
%
% see also calcDAdist

%% History
% PFT 2024/03/29 
% PFT 2024/04/27 : added plotting of orbit rms before and after correction
% PFT 2024/05/25 : added plot of xydp DAdist mode and updated handling of plot limit parameters
% PFT 2024/05/27 : added title to xy mode plot
% PFT 2024/05/26 : updated handling of verbose output, added DA without
%                  errors to xydp mode plots.
%
%% Input argument parsing
%
DAdist      = getargs(varargin,[]);
plotorbrmsf = any(strcmpi(varargin,'plotorbrms'));
verbosef  = getoption(varargin,'verbose',0);
xminplot  = getoption(varargin,'xminplot',-DAdist.outputs.DAoptions.XmaxDA);
xmaxplot  = getoption(varargin,'xmaxplot', DAdist.outputs.DAoptions.XmaxDA);
ymaxplot  = getoption(varargin,'ymaxplot',DAdist.outputs.DAoptions.YmaxDA);
dpminplot = getoption(varargin,'dpminplot',DAdist.outputs.DAoptions.dpmin);
dpmaxplot = getoption(varargin,'dpminplot',DAdist.outputs.DAoptions.dpmax);
nseeds = DAdist.inputs.nseeds;
DAmode = DAdist.outputs.DAoptions.DAmode;
dp     = DAdist.outputs.DAoptions.dp;
mode   = DAdist.inputs.mode;
DAVs   = DAdist.outputs.DAVs;
dps    = DAdist.outputs.dps;
DAxdpsp  = DAdist.outputs.DAxdpsp;
DAxdppav = DAdist.outputs.DAxdppav;
DAxdppst = DAdist.outputs.DAxdppst;
DAxdpsm  = DAdist.outputs.DAxdpsm;
DAxdpmav = DAdist.outputs.DAxdpmav;
DAxdpmst = DAdist.outputs.DAxdpmst;
DAydps   = DAdist.outputs.DAydps;
DAydpav  = DAdist.outputs.DAydpav;
DAydpst  = DAdist.outputs.DAydpst;


switch mode
    case {'xy';'XY'}
        if (strcmpi(DAmode,'border'))
            figure; xlabel('X [mm]'); ylabel('Y [mm]');grid;
            xlim([xminplot xmaxplot]*1000);ylim([0 ymaxplot]*1000);hold;
            title(sprintf('dp = %3.1f %%', dp*100));
        else
            fprintf('%s DA dist plot requires border DA calc mode. DA mode is %s . Aborting...\n',...
             datetime, DAmode);
        return
        end

        for i=1:nseeds+1
            if (verbosef>0)
                fprintf('seed n. %4d \n', i-1);
            end
        
            if (strcmpi(DAmode,'border'))
                if (i>1)  
                    plot(DAVs(:,2*i-1)*1000,DAVs(:,2*i)*1000,'-ob');
                else
                    plot(DAVs(:,2*i-1)*1000,DAVs(:,2*i)*1000,'-ok');
                end
            end
        end

    case {'xydp';'XYDP'}
        figure; xlabel('dp [%]'); ylabel('X [mm]');grid;
        xlim([dpminplot dpmaxplot]*100);
        ylim([xminplot xmaxplot]*1000);hold;
        errorbar(dps*100,DAxdppav*1000,DAxdppst*1000,'-ob');
        errorbar(dps*100,DAxdpmav*1000,DAxdpmst*1000,'-or');
        plot(dps*100, DAxdpsp(:,1)*1000, '-ok');
        plot(dps*100, DAxdpsm(:,1)*1000, '-ok');

        figure; xlabel('dp [%]'); ylabel('Y [mm]');grid;
        xlim([dpminplot dpmaxplot]*100);
        ylim([0 ymaxplot]*1000);hold;
        errorbar(dps*100,DAydpav*1000,DAydpst*1000,'-ob');
        plot(dps*100, DAydps(:,1)*1000, '-ok');
end

if (plotorbrmsf)
   figure; 
   plot(DAdist.outputs.orb0_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   hold;
   plot(DAdist.outputs.orb0_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title('rms orbit before correction');

   figure; 
   plot(DAdist.outputs.orb_stds(1,2:end)*1000,'-o');
   xlabel('seed #');
   ylabel('x/y[mm]');
   hold;
   plot(DAdist.outputs.orb_stds(3,2:end)*1000,'-o');
   legend({'X','Y'});
   title('rms orbit after correction');
end



 


