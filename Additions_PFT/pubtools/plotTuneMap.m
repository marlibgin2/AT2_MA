function plotTuneMap(tunemap,varargin)
% Plots tune maps 
%% Inputs  
% Mandatory arguments
% tunemap: structure generated by the calcTuneMap function
%
% Optional arguments
%
% note: defaults are taken from tunemap input structure
%
% plotmode: 'abs' : plots full tune value (including integer part)
%           'rel' : plots tune variations with respect to small amplitude
%                   tunes.
% plottype: 
%   'x'   : ADTS along horizontal axis (default)
%   'y'   : ADTS along vertical axis
%   'xy'  : both ADTS
%   'td'  : same as above, but on a tune diagram
%   'grid': grid of points on a tune diagram 
%   'diff': tune diffusion plot on xy plane
%   'fmap': tune diffusion plot on tune diagram
%   'chro': chromatic tune footprint on a tune diagram
%
% resorder: resonance order for tune diagram, default = 3
% qxrange=[qxmin qymin]: horizontal plot range in tune diagram,  default =[0 1]
% qyrange=[qymin qymax]: vertical plot range in tune diagram, default= [0 1]
%
%% Usage examples
% plotTuneMap(tunemap,'plottype','x','plotmode','rel');
% plotTuneMap(tunemap,'plottype','td','qxrange',[0.2 0.3],'resorder',3);

%% History
% PFT 2024/04/27: first version, based on plotADTS
%

%% Input argument parsing
plotmode = getoption(varargin,'plotmode',tunemap.inputs.plotmode);
plottype = getoption(varargin,'plottype',tunemap.inputs.plottype);
resorder = getoption(varargin,'resorder',3);
qxrange  = getoption(varargin,'qxrange',[0.0 1.0]);
qyrange  = getoption(varargin,'qyrange',[0.0 1.0]);

xmin  = tunemap.inputs.xmin;
xmax  = tunemap.inputs.xmax;
ymax  = tunemap.inputs.ymax;
amplx = tunemap.outputs.amplx;
amply = tunemap.outputs.amply;

%% Plots Tune Map
switch plotmode
    case 'abs'
       Qxxplot   = tunemap.outputs.Qxx;
       Qyxplot   = tunemap.outputs.Qyx;
       Qxyplot   = tunemap.outputs.Qxy;
       Qyyplot   = tunemap.outputs.Qyy;

    case 'rel'
        Qxxplot  = tunemap.outputs.dQxx;
        Qyxplot  = tunemap.outputs.dQyx;
        Qxyplot  = tunemap.outputs.dQxy;
        Qyyplot  = tunemap.outputs.dQyy;

    otherwise
        fprintf('%s Error in plotTuneMap. Unknown plot mode : %s \n', ...
                   datetime, plotmode);
        return
end

switch plottype

    case {'x';'X'}
        if not(isempty(amplx)||isempty(Qxxplot)||isempty(Qyxplot))
            figure; xlim([xmin*1000,xmax*1000]);
            plot(amplx*1000,Qxxplot,'-ok');xlabel('X[mm]');
            hold on;
            if (strcmpi(plotmode,'abs'))
                ylabel('Qx');
                yyaxis right; 
            else
                ylabel('dQ');
            end
            plot(amplx*1000,Qyxplot,'-or');
            if (strcmpi(plotmode,'abs'))
                ylabel('Qy');
                legend({'Qx';'Qy'});
            else
                legend({'dQx';'dQy'});
            end
            grid on;
        else
            fprintf('%s Error in plotTuneMap: Qxx or Qyx data not available in tunemap structure for plottype %s\n', datetime, plottype);
        end
        
    case {'y';'Y'}
        if not(isempty(amply)||isempty(Qxyplot)||isempty(Qyyplot))
            figure; xlim([0,ymax*1000]); 
            plot(amply*1000,Qxyplot,'-ok');xlabel('Y[mm]');
            hold on;
            if (strcmpi(plotmode,'abs'))
                ylabel('Qx');
                yyaxis right; 
            else
                ylabel('dQ');
            end
            plot(amply*1000,Qyyplot,'-or');
            if (strcmpi(plotmode,'abs'))
                ylabel('Qy');
                legend({'Qx';'Qy'});
            else
                legend({'dQx';'dQy'});
            end
            grid on;
        else
            fprintf('%s Error in plotTuneMap: Qxy or Qyy data not available in tunemap structure for plottype %s\n', datetime, plottype);
        end

    case {'xy';'XY';'xY';'Xy'}
        if not(isempty(amplx)||isempty(Qxxplot)||isempty(Qyxplot))
            figure; xlim([xmin*1000,xmax*1000]);
            plot(amplx*1000,Qxxplot,'-ok');xlabel('X[mm]');
            hold on;
            if (strcmpi(plotmode,'abs'))
                ylabel('Qx');
                yyaxis right; 
            else
                ylabel('dQ');
            end
            plot(amplx*1000,Qyxplot,'-or');
            if (strcmpi(plotmode,'abs'))
                ylabel('Qy');
                legend({'Qx';'Qy'});
            else
                legend({'dQx';'dQy'});
            end
            grid on;
        else
              fprintf('%s Error in plotTuneMap: Qxx or Qyx data not available in tunemap structure for plottype %s\n', datetime, plottype);
        end


        if not(isempty(amply)||isempty(Qxyplot)||isempty(Qyyplot))
            figure; xlim([0,ymax*1000]); 
            plot(amply*1000,Qxyplot,'-ok');xlabel('Y[mm]');
            hold on;
            if (strcmpi(plotmode,'abs'))
                ylabel('Qx');
                yyaxis right; 
            else
                ylabel('dQ');
            end
            plot(amply*1000,Qyyplot,'-or');
            if (strcmpi(plotmode,'abs'))
                ylabel('Qy');
                legend({'Qx';'Qy'});
            else
                legend({'dQx';'dQy'});
            end
            grid on;
        else
              fprintf('%s Error in plotTuneMap: Qxy or Qyy data not available in tunemap structure for plottype %s\n', datetime, plottype);
        end

    case {'td';'TD'}
        Qxxfrac=tunemap.outputs.Qxxfrac;
        Qyxfrac=tunemap.outputs.Qyxfrac;
        Qxyfrac=tunemap.outputs.Qxyfrac;
        Qyyfrac=tunemap.outputs.Qyyfrac;

        if not(isempty(Qxxfrac)||isempty(Qyxfrac)||isempty(Qyxfrac)||isempty(Qyyfrac))
            figure;plot(Qxxfrac,Qyxfrac,'ok');hold;
            plot(Qxyfrac,Qyyfrac,'or');
            plot_net(resorder,qxrange(1),qxrange(2),...
                          qyrange(1),qyrange(2));
                          
            xlabel('qx');ylabel('qy');
            title(strcat('Res order = ',num2str(resorder)));
        else
            fprintf('%s Error in plotTuneMap: Qxx, Aqxy, Qyx or Qyx not available for plottype %s \n', datetime, plottype);
        end

    case {'grid';'GRID'}
        Qxgridfrac=tunemap.outputs.Qxgridfrac;
        Qygridfrac=tunemap.outputs.Qygridfrac;

        if (not(isempty(Qxgridfrac)||isempty(Qygridfrac)))
            figure;plot(Qxgridfrac,Qygridfrac,'ok');hold;
            plot_net(resorder,qxrange(1),qxrange(2),...
                          qyrange(1),qyrange(2));
                          
            xlabel('qx');ylabel('qy');
            title(strcat('Res order = ',num2str(resorder)));
        else
            fprintf('%s Error in plotTuneMap: Qxgrid or Qygrid not available for plottype %s \n', datetime, plottype);
        end

    case {'diff';'DIFF'}
        fprintf('%s Error in plotTuneMap: plottype not implemented yet: %s \n',datetime,plottype);       

    case {'fma';'FMA'}
        fprintf('%s Error in plotTuneMap: plottype not implemented yet: %s \n',datetime,plottype);       

    case {'chro';'CHRO'}
        fprintf('%s Error in plotTuneMap: plottype not implemented yet: %s \n',datetime,plottype);       
        
    otherwise
        fprintf('%s Error in plotTuneMap: unknown plottype: %s \n',datetime,plottype);       
        return
end
    
